# Kafka <- Logstash -> Elasticsearch pipeline.

# https: //confluence.itsf.io/display/MI/14+-+How+to+setup+logging+for+your+namespace
input {
  kafka {
    id => "kafka_risf"
    bootstrap_servers => "vla-logkafka-p01.mtmc.internal:9092,vla-logkafka-p02.mtmc.internal:9092,vla-logkafka-p03.mtmc.internal:9092,vla-logkafka-p04.mtmc.internal:9092,vla-logkafka-p05.mtmc.internal:9092,vla-logkafka-p06.mtmc.internal:9092"
    client_id => "Kafka RISF"
    topics => ["it-fct-logsrisffr-1"]
    group_id => "it-logsrisffr"
    decorate_events => "extended"
    sasl_jaas_config => "org.apache.kafka.common.security.scram.ScramLoginModule required username='it-csumer-logsrisffr'  password='Iishio0eiwie';"
    sasl_mechanism => "SCRAM-SHA-512"
    security_protocol => "SASL_SSL"
    ssl_truststore_location => "/usr/share/logstash/config/itsf.truststore"
    ssl_truststore_password => "changeit"
    consumer_threads => 4
    codec => "json"
  }
}

filter {
  if [fluentd_tag] == "app.rabbitmq" {
    drop {
    }
  }
  if [message] =~ /^\{.+\}$/ {
    json {
      source => "message"
      target => "message_parsed"
      skip_on_invalid_json => true

    }
  }
  # else {
  # grok {
  #   match => {
  #     "message" => "%{TIMESTAMP_ISO8601:timestamp}%{LOGLEVEL:log-level}%{GREEDYDATA:message}"
  #   }
  #   # "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log-level} \[%{DATA:class}\]:%{GREEDYDATA:message}"
  # }
  # if [message] =~ "\tat" {
  #   grok {
  #     match => ["message", "^(\tat)"]
  #     add_tag => ["stacktrace"]
  #   }
  # }
  # grok {
  #   match => ["message", "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:level} %{NUMBER:pid} --- .+? :\s+(?<logmessage>.*)"]
  # }
  # grok {
  #   match => {
  #     "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log-level} \[%{DATA:class}\]:%{GREEDYDATA:message}"
  #   }
  # }
  # grok {
  #   match => {
  #     "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} \[%{DATA:class}\]:%{GREEDYDATA:message}"
  #   }
  # }
  # grok {
  #   match => {"message" => "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:level} %{NUMBER:pid} --- .+? :\s+(?<logmessage>.*)"}
  # }
  # grok {
  #   match => {"message" => "%{URIHOST} %{TIME} DEBUG 1 --- %{SYSLOG5424SD} %{JAVACLASS} : Socket: %{SYSLOG5424SD}, Status in: %{SYSLOG5424SD}, State out: %{SYSLOG5424SD} "}
  # }
  # grok {
  #   match => { "message" => "%{TIMESTAMP_ISO8601:time}\s+%{LOGLEVEL:log_level}\s+\[%{DATA:appName},%{DATA:traceId},%{DATA:spanId},%{DATA:exportable}\]\s+%{DATA:pid}\s+---\s+\[%{DATA:thread}\]\s+%{DATA:class}\s+:\s+%{GREEDYDATA:messageTmp}" }
  # }

  mutate {
    remove_field => [ "[kubernetes][labels]" ]
    rename => {
      "[fluentd_time]" => "timestamp_fluentd"
    }
    # test
  }
}

output {
  if [kubernetes][namespace_name] == "risf-ci-galaxion-salt" {
    opensearch {
      hosts => ["https://10.195.28.163:9200"]
      index => "kf-%{[kubernetes][namespace_name]}-%{+YYYY.MM.dd.HH.mm}"
      user => "admin"
      password => "GJ0frBtQHwtBiVEKL3c9BTj791iygutT"
      ssl => true
      ssl_certificate_verification => false
      #ilm_enabled => false
    }
  } else {
    opensearch {
      hosts => ["https://10.195.28.163:9200"]
      index => "kf-%{[kubernetes][namespace_name]}-%{+YYYY.MM.dd}"
      user => "admin"
      password => "GJ0frBtQHwtBiVEKL3c9BTj791iygutT"
      ssl => true
      ssl_certificate_verification => false
      #ilm_enabled => false
    }
  }
  # file {
  #   path => "/tmp/kf-dev-%{[kubernetes][namespace_name]}-%{+YYYY.MM.dd}.json"
  # }
}