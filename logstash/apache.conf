# 003 Grok-patterns
# https://github.com/logstash-plugins/logstash-patterns-core

input {
    file {
        path => "/app/apache_access.log"
        start_position => "beginning"
    }
}

filter {
    if [headers][request_uri] =~ "error" or [log][file][path] =~ "errors" {
        mutate {
            replace => {
                type => "error"
            }
        }
    } else {
        mutate {
            replace => {
                type => "access"
            }
        }

        grok {
            match => {
                # message => "%{IP:ip_address} %{USER:identity} %{USER:auth} \[%{HTTPDATE:req_ts}\] \"%{WORD:http_verb} %{URIPATHPARAM:req_path} HTTP/%{NUMBER:http_version}\" %{INT:http_status:int} %{INT:num_ bytes:int}"
                message => "%{HTTPD_COMBINEDLOG}"
            }
        }

        if "_grokparsefailure" in [tags] {
            drop {}
        }

        date {
            match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
            remove_field => ["timestamp"]
        }

        geoip {
            source => "[source][address]"
            target => "geoip"
            # fields => ["country_name"]
        }

        useragent {
            source => "[user_agent][original]"
        }

        if [url][original] =~ /^\/admin\// {
            drop {}
        }

        if [url][original] =~ /^\/js\// or [url][original] =~ /^\/css\// or [url][original] in ["/robots.txt", "/favicon.ico"] {
            drop {}
        }

        if [user_agent][device] == "Spider" {
            drop {}
        }
    }

    mutate {
        remove_field => ["headers", "@version", "host"]
    }

    
}

output {
    # stdout {
    #     codec => rubydebug
    # }

    # file {
    #     path => "temp-%{type}-%{+yyyy.MM.dd}.log"
    # }

    if [type] == "access" {
        elasticsearch {
            hosts => ["http://elastic-master:9200"]
            index => "logstash-access"
            action => "create"
        }
        # opensearch {
        #     hosts =>  ["http://opensearch-client:9200"]
        #     # hosts => ["http://host.docker.internal:9201"]
        #     # index => "logstash-%{type}"
        #     index => "logstash-access"
        #     action => "create"
        #     ssl => false
        #     ecs_compatibility => "disabled"
        #     http_compression => true
        # }
    } else {
        # opensearch {
        #     hosts =>  ["http://opensearch-node1:9200"]
        #     index => "logstash-%{type}-%{+YYYY.MM.dd.HH.mm}"
        #     ssl => false
        #     ecs_compatibility => "disabled"
        #     http_compression => true
        # }

        stdout {
            codec => rubydebug
        }
    }
}